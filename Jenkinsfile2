pipeline {
    agent none
    stages {
        stage('Build') {
            agent {
                label 'Node1'
            }
            steps {
                echo 'Building the application'
                sh '/opt/maven/bin/mvn clean package'
            }
        }
        stage('Test') {
            agent {
                label 'Node1'
            }
            steps {
                echo 'Running tests'
                sh 'mvn test'
                stash(name: 'Jenkins-CiCd-project', includes: 'target/*.war')
            }
        }
        stage('Deploy') {
            agent {
                label 'Node1'
            }
            steps {
                echo 'Deploying the application'
                unstash 'Jenkins-CiCd-project'
                sh "~/apache-tomcat-7.0.94/bin/shutdown.sh"  // Shutdown Tomcat
                sh "sudo rm -rf ~/apache-tomcat-7.0.94/webapps/*.war"  // Remove existing WAR files
                sh "sudo mv target/*.war ~/apache-tomcat-7.0.94/webapps/"  // Deploy the new WAR file
                sh "sudo systemctl daemon-reload"  // Reload system services
                sh "~/apache-tomcat-7.0.94/bin/startup.sh"  // Start Tomcat
            }
        }
    }
    post {
        success {
            script {
                // Send an email for a successful build
                emailext subject: "Build Successful - ${currentBuild.fullDisplayName}",
                    body: "Congratulations! The build was successful.\n\nCheck console output at ${BUILD_URL}",
                    to: 'kelvinatete@yahoo.com'
            }
        }
        failure {
            script {
                // Send an email for a failed build
                emailext subject: "Build Failed - ${currentBuild.fullDisplayName}",
                    body: "Oops! The build failed.\n\nCheck console output at ${BUILD_URL}",
                    to: 'kelvinatete@yahoo.com'
            }
        }
    }
}
